package uk.co.lawilliams.finalproject.runcatrun;

import com.badlogic.gdx.Game;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Input;
import com.badlogic.gdx.utils.Timer;

import uk.co.lawilliams.finalproject.runcatrun.screens.GameScreen;
import uk.co.lawilliams.finalproject.runcatrun.screens.SplashScreen;
import uk.co.lawilliams.finalproject.runcatrun.screens.MenuScreen;
import uk.co.lawilliams.finalproject.runcatrun.utils.AndroidInterface;
import uk.co.lawilliams.finalproject.runcatrun.utils.AssetManager;
import uk.co.lawilliams.finalproject.runcatrun.utils.GameManager;

public class RunCatRun extends Game {

    public RunCatRun(AndroidInterface androidInterface) {
        GameManager.getInstance().setAndroidInterface(androidInterface);
    }

    private static long SPLASH_TIME_LENGTH = 2000L;
    private Game game;

    @Override
    public void create() {
        game = this;
        showSplashAndContinue();
    }

    private void showSplashAndContinue() {
        setScreen(new SplashScreen(this));

        final long splash_starting_time = System.currentTimeMillis();

        new Thread(new Runnable() {
            @Override
            public void run() {
                Gdx.app.postRunnable(new Runnable() {
                    @Override
                    public void run() {
                        long splash_elapsed_time = System.currentTimeMillis() - splash_starting_time;

                        if (splash_elapsed_time < RunCatRun.SPLASH_TIME_LENGTH) {
                            Timer.schedule(
                                    new Timer.Task() {
                                        @Override
                                        public void run() {
                                            AssetManager.load();
                                            RunCatRun.this.setScreen(new MenuScreen(game));
                                        }
                                    }, (float) (RunCatRun.SPLASH_TIME_LENGTH - splash_elapsed_time) / 1000f);
                        } else {
                            AssetManager.load();
                            RunCatRun.this.setScreen(new MenuScreen(game));
                        }
                    }
                });
            }
        }).start();
    }

    @Override
    public void dispose() {
        getScreen().dispose();
        AssetManager.dispose();
        Gdx.app.exit();
    }

}